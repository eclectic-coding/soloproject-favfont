{"version":3,"sources":["scss/abstracts/_mixins.scss","scss/base/_base.scss","scss/abstracts/_variables.scss","scss/base/_typography.scss","scss/base/_helpers.scss","scss/components/_button.scss"],"names":[],"mappings":"AAMA;;;;;;;;;;;;;;EAcE;AChBF;;;;;GAKG;AAEH,CAAC;AACD,CAAC,QAAQ;AACT,CAAC,OAAO,CAAC;EACP,UAAU,EAAE,OAAO,GACpB;;AAED,KAAK,CAAC;EACJ,SAAS,EAAE,KAAK;EAChB,WAAW,ECbK,WAAW,EAAE,sBAAsB,EAAE,gBAAgB,EACvE,WAAW,EAAE,OAAO,EAAE,UAAU,GDa/B;;AAED,IAAI,CAAC;EACH,UAAU,EAAE,UAAU;EACtB,OAAO,EAAE,IAAI,GACd;;AEzBD;;;GAGG;AAGH,IAAI,CAAC;EACH,WAAW,EAAE,kBAAkB;EAC/B,SAAS,EAAE,IAAI;EACf,WAAW,EAAE,GAAG;EAChB,WAAW,EAAE,GAAG;EAChB,KAAK,EDKM,OAAe,GCJ3B;;AAED;;GAEG;AACH,CAAC,CAAC;EACA,KAAK,EDEO,OAAe;ECD3B,eAAe,EAAE,IAAI,GAMtB;EARD,AAIE,CAJD,AAIE,MAAM,EAJT,CAAC,AAKE,MAAM,CAAC;IACN,WAAW,EAAE,IAAI,GAClB;;ACpBH;;GAEG;AACH,SAAS,OAAO,CAAC;EACf,KAAK,EAAE,IAAI;EACX,OAAO,EAAE,EAAE;EACX,OAAO,EAAE,KAAK,GACf;;AAED;;GAEG;AACH,UAAU,CAAC;EACT,OAAO,EAAE,IAAI;EAEb,mBAAmB,EAAE,2BAA2B;EAEhD,kBAAkB,EAAE,OAAO;EAG3B,MAAM,EAAE,KAAK;EACb,cAAc,EAAE,IAAI,GACrB;;AAED;;;;GAIG;AACH,UAAU,CAAC;EACT,QAAQ,EAAE,MAAM;EAChB,OAAO,EAAE,CAAC;EAAE,OAAO;EACnB,WAAW,EAAE,IAAI;EACjB,WAAW,EAAE,MAAM,GACpB;;AAED;;;;GAIG;AACH,gBAAgB,CAAC;EACf,MAAM,EAAE,CAAC;EACT,IAAI,EAAE,aAAa;EACnB,MAAM,EAAE,GAAG;EACX,MAAM,EAAE,IAAI;EACZ,QAAQ,EAAE,MAAM;EAChB,OAAO,EAAE,CAAC;EACV,QAAQ,EAAE,QAAQ;EAClB,KAAK,EAAE,GAAG,GACX;;AClDD,IAAI,CAAC;EACH,MAAM,EAAE,WAAW;EACnB,OAAO,EAAE,SAAS;EAClB,WAAW,EHDK,WAAW,EAAE,sBAAsB,EAAE,gBAAgB,EACvE,WAAW,EAAE,OAAO,EAAE,UAAU;EGC9B,WAAW,EAAE,IAAI;EACjB,KAAK,EAAE,KAAK;EACZ,MAAM,EAAE,IAAI;EACZ,aAAa,EAAE,GAAG,GAOnB;EALC,AAAC,aAAS,CAAC;IACT,gBAAgB,EHMN,OAAe,GGL1B","file":"main.77bb5cfd.css","sourceRoot":"../src","sourcesContent":["// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass mixins.\n// -----------------------------------------------------------------------------\n@import \"../abstracts/variables\";\n\n// MEDIA QUERY MANAGER\n/*\n0 - 600px:      Phone\n600 - 900px:    Tablet portrait\n900 - 1200px:   Tablet landscape\n[1200 - 1800] is where our normal styles apply\n1800px + :      Big desktop\n\n$breakpoint arguement choices:\n- phone\n- tab-port\n- tab-land\n- big-desktop\n\n- 1em = 16px\n*/\n\n@mixin respond($breakpoint) {\n  @if $breakpoint == phone {\n    @media only screen and (max-width: 37.5em) { @content };  //600px\n  }\n  @if $breakpoint == tab-port {\n    @media only screen and (max-width: 56.25em) { @content }; //900px\n  }\n  @if $breakpoint == tab-land {\n    @media only screen and (max-width: 75em) { @content };    //1200px\n  }\n  @if $breakpoint == big-desktop {\n    @media only screen and (min-width: 112.5em) { @content }; //1800\n  }\n}\n\n\n\n@mixin truncate($truncation-boundary) {\n  max-width: $truncation-boundary;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n\n","// -----------------------------------------------------------------------------\n// This file contains very basic styles.\n// -----------------------------------------------------------------------------\n\n/**\n * Make all elements from the DOM inherit from the parent box-sizing\n * Since `*` has a specificity of 0, it does not override the `html` value\n * making all elements inheriting from the root box-sizing value\n * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\n */\n \n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\n:root {\n  font-size: 62.5%; // 10px as 1 rem == 16px = 1.6 rem\n  font-family: $text-font-stack;\n}\n\nbody {\n  box-sizing: border-box;\n  padding: 3rem;\n}\n\n\n\n","// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass variables.\n// -----------------------------------------------------------------------------\n\n/// Regular font family\n/// @type List\n$text-font-stack: 'Open Sans', 'Helvetica Neue Light', 'Helvetica Neue',\n'Helvetica', 'Arial', sans-serif !default;\n\n/// Code (monospace) font family\n/// @type List\n$code-font-stack: 'Courier New', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono',\n'Monaco', monospace !default;\n\n/// Copy text color\n/// @type Color\n$text-color: rgb(34, 34, 34) !default;\n\n/// Main brand color\n/// @type Color\n$brand-color: rgb(229, 0, 80) !default;\n\n/// Light grey\n/// @type Color\n$light-grey: rgb(237, 237, 237) !default;\n\n/// Medium grey\n/// @type Color\n$mid-grey: rgb(153, 153, 153) !default;\n\n/// Dark grey\n/// @type Color\n$dark-grey: rgb(68, 68, 68) !default;\n\n/// Container's maximum width\n/// @type Length\n$max-width: 1180px !default;\n\n/// Breakpoints map\n/// @prop {String} keys - Keys are identifiers mapped to a given length\n/// @prop {Map} values - Values are actual breakpoints expressed in pixels\n$breakpoints: (\n        'xs': 320px,\n        'sm': 576px,\n        'mg': 768px,\n        'lg': 992px,\n        'xl': 1200px\n) !default;\n","/**\n * Basic typography style -- Semantic and elements styles\n * Classes will be located in other partials\n */\n@import \"../abstracts/variables\";\n\nbody {\n  font-family: \"Lato\", sans-serif;\n  font-size: 2rem;\n  font-weight: 400;\n  line-height: 1.7;\n  color: $text-color;\n}\n\n/**\n * Basic styles for links\n */\na {\n  color: $brand-color;\n  text-decoration: none;\n\n  &:hover,\n  &:hover {\n    font-weight: bold;\n  }\n}\n","// -----------------------------------------------------------------------------\n// This file contains CSS helper classes.\n// -----------------------------------------------------------------------------\n\n/**\n * Clear inner floats\n */\n.clearfix::after {\n  clear: both;\n  content: '';\n  display: table;\n}\n\n/**\n * Main content CSS Grid containers\n */\n.container {\n  display: grid;\n\n  grid-template-areas: \"header\" \"content\" \"footer\";\n\n  grid-template-rows: 0 1fr 0;\n  //grid-gap: 10px;\n\n  height: 100vh;\n  padding-bottom: 2rem;\n}\n\n/**\n * Hide text while making it readable for screen readers\n * 1. Needed in WebKit-based browsers because of an implementation bug;\n *    See: https://code.google.com/p/chromium/issues/detail?id=457146\n */\n.hide-text {\n  overflow: hidden;\n  padding: 0; /* 1 */\n  text-indent: 101%;\n  white-space: nowrap;\n}\n\n/**\n * Hide element while making it readable for screen readers\n * Shamelessly borrowed from HTML5Boilerplate:\n * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133\n */\n.visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n","// -----------------------------------------------------------------------------\n// This file contains all styles related to the button component.\n// -----------------------------------------------------------------------------\n\n.btn {\n  margin: 1rem 0 2rem;\n  padding: 12px 24px;\n  font-family: $text-font-stack;\n  font-weight: bold;\n  color: white;\n  border: none;\n  border-radius: 5px;\n\n  &__primary {\n    background-color: $brand-color;\n  }\n\n  \n}\n"]}