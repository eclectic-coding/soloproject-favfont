{"version":3,"sources":["data/fontData.js","js/reset.js","js/searchBar.js","js/app.js"],"names":["fontData","id","name","fallback","designer","resetFontSize","field","forEach","text","style","fontSize","resetCustomText","sample","change","textContent","value","resetCardGrid","document","getElementById","classList","remove","resetColorMode","darkClass","querySelector","contains","fontCardSearch","fontSearch","fontCards","filter","trim","toLowerCase","textTitle","Array","prototype","slice","call","querySelectorAll","i","length","txtValue","innerText","indexOf","display","changeSampleText","event","formValue","target","textField","preventDefault","originalSampleText","changeText","changeColor","gridList","resetIcon","fontCard","getFont","FONTDATA","map","font","innerHTML","addEventListener","currentFontSize","toggle"],"mappings":";;AGAA;;AACA;;AHDA,AGEA,IHFMA,QAAQ,GAAG,CACf;AACEC,ACFJ,ACAO,EFEHA,EAAE,AEFOwB,EFEL,CADN,WEDyB,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAaC,SAAb,EAA2B;AFGrDzB,ACFJ,ACCE,EFCEA,IAAI,AEDF0B,EFCI,IEDE,GAAGF,CFDb,SECuB,CAACX,KAAX,CAAiBc,IAAjB,GAAwBC,WAAxB,EAAb;AFEE3B,ACFJ,ACCE,EFCEA,IEDI4B,IFCI,EAAE,GEDG,GAAGC,KFFlB,AEEuB,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BlB,QAAQ,CAACmB,gBAAT,CAA0B,IAA1B,CAA3B,CAAlB;AFEEhC,AGDJ,AFDA,EDEIA,EGDE8C,MHCM,EAAE,EGDE,GAAGjC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAnB;AHHE,AGIF,AFDA,ACCE,CFLe,EAOf,CGFIiC,GDAC,IAAId,CAAC,GCAK,ADAF,CAAb,ECAkBpB,ADAFoB,CAAC,GAAGV,ICAM,CAACT,IDAE,CAACoB,MAA9B,EAAsCD,CCApB,ADAqB,CCAG,CDA1C,EAA2C,eCAzB,CAApB;AHGIpC,AGFJ,AFDA,ACCI,EFEAA,EAAE,AGFAyB,EHEE,CADN,CEDMa,MCAQ,EDAA,CCAGtB,EDAAc,MCAQ,CAACb,EDAA,CAACmB,CAAD,CAAT,CAAavB,QCAb,CAAwB,EDAxB,IAA4BiB,OCA5B,CAAnB,CDAwD,CAACM,CAAD,CAAT,CAAaG,SAAxD;AFGAtC,AGFJ,AFDA,EDGIA,EGFEQ,EHEE,EAAE,IGFI,GAAGO,EHAf,MGAuB,CAACC,cAAT,CAAwB,WAAxB,CAAjB;AHGIf,AGFJ,AFDO,ACAH,EFGAA,EGFEiD,AFDO/C,ICALkC,EFGI,EAAE,AGFA,GAAGtB,CDDD,CDAU,ACATa,GDAY,CDA3B,EGCuB,CAACZ,IDDlB,CDAKb,ECAkBoC,OCCd,ADDT,CCCiC,ADDFb,GDAV,CAACtB,ECAtB,GDAqB,CCAoB,CCChC,AFDuB,ACAU,CCClD,ADDI,EAAiD;AFIjDF,AGFJ,AFDE,ACAIuB,EFGFvB,EGFE6C,EDDAtB,IFGM,EAAE,GEHC,CAACU,CAAD,CAAT,CAAa5B,GCCK,EDDlB,CCCqB,ADDFiC,OAAnB,GAA6B,EAA7B,uCCCN;AHFE,AGGF,AFDEpC,ACAG,CFTY,CCSfA,CDIA,CGHI+C,CDHF,EDEG,CAAC9C,GCAG,ECCI,EFDb,CECgBU,AFDF,QECU,CAACC,CFDXV,IAAI,EAAI,OECN,CAAwB,UAAxB,CAAlB;AHIIP,AGFJ,AFFIO,ACAEmB,EFIF1B,EAAE,AGFFqD,AFFA9C,EDII,AEJFmB,CFGJ,CCHM,CAAClB,GEEG,EFFR,CEEWQ,AFFAP,ACAA,CAAC2B,CAAD,CAAT,CAAa5B,ICEI,AFFnB,CEEoBS,ADFlB,CAAmBwB,CDAC,MAAtB,ACAE,GAA6B,GCEpB,CAAwB,EDFjC,UCES,CAAf,EAEA;AHCIxC,ACJD,ACAE,EFIDA,CCNF,GDMM,EAAE,WAFR;AAGEC,AGDJ,AFHC,ACAE,CDLI,CDSHA,EGDEoD,MHCM,CGDC,CHCC,EGDE,SAAVA,CHFJ,MGEc,GAAM;AHElBnD,AGDFoD,ADHD,CAbM,CFiBHpD,QAAQ,EAAE,QGDHqD,GAAT,CAAa,UAAAC,IAAI;AHHjB,AGGiB,CHhBF,EAmBf,QGFEJ,QAAQ,CAACK,SAAT,qGAGcD,IAAI,CAACxD,IAHnB,sJAMkCwD,IAAI,CAACtD,QANvC,2HAS+BsD,IAAI,CAACxD,IATpC,gBAS8CwD,IAAI,CAACvD,QATnD,4CAWU8C,kBAXV,6CADe;AHIfhD,AGJe,EHIfA,CGJF,CHII,EAAE,CADN;AAEEC,AGYH,AFnBM,CECP,CHMIA,ECPSS,EDOL,EAAE,WAFR,ACL0B,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAQM,MAAR,EAAgBC,MAAhB,EAA2B;ADQtDV,ACPF,ACAK,EFOHA,EEPSwC,MFOD,EAAE,QEPe,GFI3B,AEJ8B,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AFQvCxC,AGWJmD,AFlBEjD,ACCA,EFMEF,ACPFE,ICCIuC,CCiBC,AFlBA,CAACtC,EDOI,EAAE,GCPZ,ACCa,CDDC,ECCEqC,KAAK,CAACE,EDDRtC,IAAI,ACCF,CAAaO,CDDP,ICCN,CAAmBc,IAAnB,EAAhB;AFEA,AGiBF,AFnBIrB,ACCF,CFlBe,EAyBf,CCREA,ECCIuC,EDDA,CAACjC,MCCQ,GAAGkB,EDDhB,GAAmBpB,ACCE,CAACqB,KDDtB,ICCgB,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BlB,QAAQ,CAACmB,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AFQEnC,ACRD,ACED2C,EFME3C,AENF2C,CDJA,CDUI,EAAE,CADN,AELK,CAACI,cAAN;AFOE9C,AGUJ,AFlBEW,EDQEX,ACRFW,EEkBIkC,EHVE,EAAE,ACRF,CAAChC,IEkBM,CFlBb,EEkBgBiB,CFlBD,EAAf,EEkBqB,CAACC,SAAN,CAAgBC,GHZhC,EGYgB,CAAsBC,IAAtB,CAA2BlB,QAAQ,CAACmB,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AHTIjC,AGUJ,AFlBC,ACEC,CDRK,CDcHA,EGUEwB,EDhBAkB,IFMM,EAAE,CGUC,EDhBA,CCgBGb,IDhBE,CFGlB,AGaqB,CAACC,ADhBtB,EAAsB,OCgBN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BlB,QAAQ,CAACmB,gBAAT,CAA0B,OAA1B,CAA3B,CAAlB,EAEA;AHXIhC,AENA2C,EFMA3C,EENA2C,MFMQ,EAAE,CEND,CAACxC,OAAV,CAAkB,UAACC,IAAD,EAAU;AFE9B,AGgBFkB,ADjBMlB,CFxBW,EA+Bf,GEPIA,ICiBI,ADjBA,CCiBCoD,ADjBA9C,WAAL,GAAmB+B,ECiBzB,CAA4B,MDjBtB,CCiBN,EAAqC;AHTjC5C,AGSiC,ADhBhC,EFODA,EAAE,CETF,CFSI,CADN,EGUyC,+BAAeyB,UAAf,EAA2BC,SAA3B,CAAN;AHRjCzB,AGQiC,AFnB9B,ACIJ,CCeH,CHRIA,CEXF,CCqBF,AFrBac,EDWL,EAAE,CEPD,QDJiB,GAAG,EDS3B,OCTWA,aAAgB,GAAM;ADY/Bb,ACXF,ACIE4C,EFOA5C,EEPA4C,MFOQ,EAAE,CEPD,CAACxC,OAAV,CAAkB,EFIpB,QEJqBC,IAAD,EAAU;AFQ5BJ,AGSJ8C,AFpBEjC,ACIIT,EFOFJ,ACXFa,ICIIT,IFOM,AGSF,AFpBA,ACIA,CCgBCoD,AFpBA1C,ACIAJ,CFOG,UEPR,GDJJ,ACIuBmC,CDJC,CEoB1B,CAA4B,OAA5B,EAAqC,EFpBnC,EAAuClC,ECInC,GDJJ,CEoBoC6B,EFpBW,EAA/C,CEoBmC,AFtBF,CAIjC;ADKA,AGamC,ADfhC,CF7BY,EAqCf,EEVE,ICiB4C,iCAAiBA,KAAjB,CAAX;AHNjC3C,AGMiC,AFjBnCgB,ACGC,CCcH,CHNIhB,ACXFgB,EDWI,AGQN,EHRQ,CADN,GCVQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,CAAgDC,MAAhD,CAAuD,YAAvD;ADYElB,ACVH,ACEA,CDTM,ACPA,CFwBHA,IAAI,EAAE,MAFR;AAGEC,AGOJO,EHPIP,MGOI,CAACyD,CHPG,EAAE,YAHZ,CGUF,CAA0B,OAA1B,EAAmC,UAAChB,KAAD,EAAW;AHN1CxC,AGOF,EHPEA,IGOI2C,IHPI,EAAE,GGOG,GAAGf,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BlB,QAAQ,CAACmB,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AHXA,AGYA,CHjDe,EA2Cf,GGMIyB,eAAe,GAAGjB,KAAK,CAACE,MAAN,CAAa/B,KAAnC;AHLEd,AGOF8C,AFpBK,EDaH9C,AGOF8C,EHPI,ACbO1B,EDaL,CADN,IGQS,CAACd,MFpBe,CEoBzB,CAAkB,CFpBU,SEoBVC,AFpBPa,IEoBW,EAAI,QFpBE,GAAM;ADchCnB,AGOAM,AFpBF,EDaEN,EGOAM,EHPI,ACbAc,EDaE,AGOF,CAACb,KAAL,CAAWC,AFpBE,GAAGO,KEoBhB,EHTF,CGSwB4C,AFpBE,CAACtC,aAAT,CEoBhB,AFpBuC,MAAvB,EAA+BJ,SAA/B,CAAyCK,QAAzC,CAAkD,WAAlD,CAAlB;ADcErB,AGOD,EHPCA,CGKF,OHLU,EAAE,YAHZ;AAIEC,AGOH,AFrBC,CEcF,CHAIA,EGSJ,EFvBMkB,IDcM,EAAE,GCdZ,EAAe;ADUf,ACTEL,CDlCa,EAiDf,CCfEA,QAAQ,CAACM,aAAT,CAAuB,MAAvB,EAA+BJ,SAA/B,CAAyCC,MAAzC,CAAgD,WAAhD;ADgBAnB,AGOJkD,AFtBG,EDeClD,EAAE,EAAE,CADN,IGQS,CAAC2D,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AHNxC1D,AGOFe,AFrBD,CANM,CDoBHf,AGOFe,IHPM,EAAE,EGOA,CAACM,KHTT,QGSA,CAAuB,MAAvB,EAA+BJ,SAA/B,CAAyC2C,MAAzC,CAAgD,WAAhD;AHNE3D,AGOH,CAFD,CHLIA,EGSJ,MHTY,EAAE,YAHZ;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,AGaFgD,CH9DiB,EAuDf,KGOM,CAACQ,gBAAT,CAA0B,OAA1B,EAAmC,UAAChB,KAAD,EAAW;AHN1C3C,AGOFqD,EHPErD,AGOFqD,EHPI,EAAE,EADN,EGQQ,CAACnC,SAAT,CAAmB2C,MAAnB,CAA0B,YAA1B;AHNE5D,AGOH,CAFD,CHLIA,EGSJ,EHTQ,EAAE,SAFR;AAGEC,EAAAA,QAAQ,EAAE,YAHZ;AAIEC,AGQJiD,EHRIjD,OGQK,CHRG,AGQFwD,EHRI,cGQd,CAA2B,OAA3B,EAAoC,YAAM;AHZxC,AGcA,CHrEe,EA6Df,yBGQcb,SAAd;AHPE9C,AGQF,EHREA,EAAE,EAAE,EADN,sBGSgB8C,SAAhB,EAA2BE,kBAA3B,EAA+CC,UAA/C;AHPEhD,AGQF,EHREA,IAAI,EAAE,SAFR;AAGEC,AGQF,EHREA,QAAQ,EAAE,YAHZ;AAIEC,AGQH,CAND,CHFIA,QAAQ,EAAE;AAJZ,CA7De,EAmEf;AACEH,EAAAA,EAAE,EAAE,EADN;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,QAAQ,EAAE,YAHZ;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAnEe,CAAjB;eA2EeJ","file":"app.c3f9f951.js","sourceRoot":"../src","sourcesContent":["const fontData = [\n  {\n    id: 1,\n    name: 'Roboto',\n    fallback: 'san-serif',\n    designer: 'Christian Robertson'\n  },\n  {\n    id: 2,\n    name: 'Goldman',\n    fallback: 'cursive',\n    designer: 'Lam Bao, Duy Dao, Yellow Type Foundry'\n  },\n  {\n    id: 3,\n    name: 'Xanh Mono',\n    fallback: 'mono-space',\n    designer: 'Lam Bao, Duy Dao, Yellow Type Foundry'\n  },\n  {\n    id: 4,\n    name: 'Open Sans',\n    fallback: 'san-serif',\n    designer: 'Steve Matteson'\n  },\n  {\n    id: 5,\n    name: 'Big Shoulder Stencil Text',\n    fallback: 'cursive',\n    designer: 'Patric King'\n  },\n  {\n    id: 6,\n    name: 'Noto Sans JP',\n    fallback: 'sans-serif',\n    designer: 'Google'\n  },\n  {\n    id: 7,\n    name: 'Lato',\n    fallback: 'sans-serif',\n    designer: 'Łukasz Dziedzic'\n  },\n  {\n    id: 8,\n    name: 'Source Sans Pro',\n    fallback: 'sans-serif',\n    designer: 'Paul D. Hunt'\n  },\n  {\n    id: 9,\n    name: 'Oswald',\n    fallback: 'sans-serif',\n    designer: 'Vernon Adams, Kalapi Gajjar, Cyreal'\n  },\n  {\n    id: 10,\n    name: 'Poppins',\n    fallback: 'sans-serif',\n    designer: 'Indian Type Foundry, Jonny Pinhorn'\n  },\n  {\n    id: 11,\n    name: 'Raleway',\n    fallback: 'sans-serif',\n    designer: 'Multiple Designers'\n  },\n  {\n    id: 12,\n    name: 'Merriweather',\n    fallback: 'sans-serif',\n    designer: 'Sorkin Type'\n  }\n];\n\nexport default fontData;\n","/*\n * Reset function to reset UI to default state\n *\n * resetFontSize - set font card grid to default 20px font size\n * resetCustomText - reset sample text to default\n * resetCardGrid - reset to font search and card grid to default\n */\nexport const resetFontSize = (field) => {\n  // Reset font size\n  field.forEach(text => {\n    text.style.fontSize = '20px';\n  });\n};\n\nexport const resetCustomText = (field, sample, change) => {\n  // Reset custom text\n  field.forEach(text => {\n    text.textContent = sample;\n  });\n  change.value = '';\n};\n\nexport const resetCardGrid = () => {\n  // Reset card default text\n  document.getElementById('font-search').value = '';\n\n  // Reset cards to from list to grid\n  document.getElementById('card-array').classList.remove('card__list');\n\n};\n\nexport const resetColorMode = () => {\n  const darkClass = document.querySelector('html').classList.contains('dark-mode')\n  if (darkClass) {\n    document.querySelector('html').classList.remove('dark-mode')\n  }\n\n}\n\n","export const fontCardSearch = (fontSearch, fontCards) => {\n\n  let filter = fontSearch.value.trim().toLowerCase();\n  const textTitle = Array.prototype.slice.call(document.querySelectorAll('h2'));\n\n  for (let i = 0; i < fontCards.length; i++) {\n    let txtValue = textTitle[i].textContent || textTitle[i].innerText;\n    if (txtValue.toLowerCase().indexOf(filter) > -1) {\n      fontCards[i].style.display = '';\n    } else {\n      fontCards[i].style.display = 'none';\n    }\n  }\n};\n\nexport const changeSampleText = (event) => {\n\n  let formValue = event.target.value.trim();\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n\n  event.preventDefault();\n\n  if (formValue !== '') {\n    textField.forEach((text) => {\n      text.textContent = formValue;\n    });\n  } else {\n    textField.forEach((text) => {\n      text.textContent = originalSampleText;\n    });\n  }\n};\n","import FONTDATA from '../data/fontData';\nimport { resetFontSize, resetCustomText, resetCardGrid, resetColorMode } from './reset';\nimport { changeSampleText, fontCardSearch } from './searchBar';\n\nconst changeText = document.getElementById('input-text');\nconst changeColor = document.getElementById('dark-mode-toggle');\nconst fontSearch = document.getElementById('font-search');\nconst fontSize = document.getElementById('font-size');\nconst gridList = document.getElementById('grid-list');\nconst originalSampleText = 'Almost before we knew it, we had left the ground.';\nconst resetIcon = document.getElementById('reset-ui');\n\nlet fontCard = document.getElementById('card-array');\n\n// Load font card - UI\nconst getFont = () => {\n  FONTDATA.map(font => (\n    fontCard.innerHTML += `\n        <div class=\"card\">\n          <div class=\"card__title\">\n            <h2>${font.name}</h2>\n            <span><i class=\"far fa-plus-square card__icon\"></i></span>\n          </div>\n          <p class=\"card__subtitle\">${font.designer}</p>\n          <p id=\"body-text\"\n            class=\"card__bodytext\" \n            style=\"font-family: '${font.name}', ${font.fallback}\"\n            >\n            ${originalSampleText}\n          </p>\n        </div>\n      `\n  ));\n};\ngetFont();\n\n/* Event listeners --------------- */\nconst textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\nconst fontCards = Array.prototype.slice.call(document.querySelectorAll('.card'));\n\n// Search for and filter font cards\nfontSearch.addEventListener('input', () => fontCardSearch(fontSearch, fontCards))\n\n// Change font card sample text\nchangeText.addEventListener('input', (event) => changeSampleText(event))\n\n// Change font size -- defaults to 20px\nfontSize.addEventListener('input', (event) => {\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n  let currentFontSize = event.target.value;\n\n  textField.forEach(text => {\n    text.style.fontSize = currentFontSize;\n  });\n});\n\n// Change color\nchangeColor.addEventListener('click', () => {\n  document.querySelector('html').classList.toggle('dark-mode')\n})\n\n// Change grid to list display\ngridList.addEventListener('click', (event) => {\n  fontCard.classList.toggle('card__list')\n})\n\n// Reset UI\nresetIcon.addEventListener('click', () => {\n\n  resetFontSize(textField)\n  resetCustomText(textField, originalSampleText, changeText)\n  resetCardGrid()\n  resetColorMode()\n});\n"]}