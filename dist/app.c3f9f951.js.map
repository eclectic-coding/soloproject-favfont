{"version":3,"sources":["data/fontData.js","js/reset.js","js/searchBar.js","js/settings.js","js/app.js"],"names":["fontData","id","name","fallback","designer","resetFontSize","field","forEach","text","style","fontSize","resetCustomText","sample","change","textContent","value","resetCardGrid","fontCards","document","getElementById","i","length","display","fontCardSearch","fontSearch","filter","trim","toLowerCase","textTitle","Array","prototype","slice","call","querySelectorAll","txtValue","innerText","indexOf","changeSampleText","event","formValue","target","textField","preventDefault","originalSampleText","colorSettings","setColor","documentElement","setProperty","classList","remove","changeText","changeColor","gridList","resetIcon","addFont","fontCard","getFont","FONTDATA","map","font","innerHTML","addEventListener","currentFontSize","alert","toggle"],"mappings":";;AIAA;;AACA;;AJDA,AIEA,IJFMA,QAAQ,GAAG,CACf;AACEC,ACFJ,ACAO,ACAA,EHEHA,EAAE,AEFOsB,ACAAqB,EHEL,CADN,UGDwB,CDAC,ECAE,CDAC,QCAjBA,CDAArB,YCAgB,CAACsB,CDAA,CAACrB,MCAF,EAAc,EDAb,EAAaP,SAAb,EAA2B;AFGrDf,AIAJ,AHFA,ACCE,ACDA,EHEEA,IAAI,AEDFuB,ACDAoB,EHEI,IEDE,ECDE,CDCCrB,CFDb,GGAiB,MDCM,CAACT,ACDxB,EAA0B,GDCb,CAAiBW,IAAjB,GAAwBC,WAAxB,EAAb;AFEExB,ACFJ,ACCE,ACDEe,EHEAf,EGFAe,EDCIU,IFCI,EAAE,AGFF,CAACkB,EDCI,GAAGjB,KFFlB,AEEuB,CAACC,ICDtB,CAAyBrB,IDCT,CAAgBsB,ACDhC,CAA+BgB,IDCf,CAAsBf,IAAtB,CAA2Bd,CCD3C,CAA2C,MDCQ,CAACe,gBAAT,CAA0B,CCDrE,EAAsE,CDC3B,CAA3B,CAAlB,ICDE;AHGA7B,ACFJ,AEAIc,EHEAd,EGFAc,MHEQ,EAAE,AGFF,CAAC4B,eAAT,CAAyBrC,KAAzB,CAA+BsC,WAA/B,CAA2C,yBAA3C,EAAsE,OAAtE;AHFF,ACGF,ACCE,ACDE7B,CHJa,EAOf,CGHEA,GDCG,IAAIE,CAAC,ACDA,CAACD,EDCE,CAAb,EAAgBC,CAAC,GAAGH,KCDlB,CAAwB,GDCG,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C,CCDzC,EAA4C4B,SAA5C,CAAsDC,MAAtD,CAA6D,cAA7D;AHIAhD,AIFJ,AHDA,ACCI,ACDD,EHGCA,CGPF,CHOI,AIFAiD,EJEE,CADN,CEDMhB,CCDC,KCCO,EFAA,CEAGhB,EFAAU,MEAQ,CAACT,EFAA,CAACC,CAAD,CAAT,CAAaN,QEAb,CAAwB,EFAxB,IAA4Bc,MEA5B,CAAnB,EFAwD,CAACR,CAAD,CAAT,CAAae,SAAxD;AFGAjC,AIFJ,AHDA,AEAIgB,EHGAhB,EIFEiD,ADDFjC,EHGI,EAAE,IGHE,CAAC4B,ECCI,EJAf,CIAkB5B,QAAQ,CAACC,CDDzB,CAAyBV,KAAzB,CAA+BsC,MCCf,CAAwB,IDDxC,CAA2C,aCC3B,CAApB,WDDI,EAAsE,OAAtE;AHIA5C,AIFJ,AHDO,ACAH,ACAAe,EHGAf,EIFEqB,AHDOnB,AEATa,IDAIgB,EFGI,EAAE,AGHF,CAACY,CCCG,EFDA,CECG5B,AHDO,ACATS,GDAY,CDA3B,IICyB,CAACR,EFDpB,ACAJ,CFASd,AEAgBI,EDAE2B,GCA3B,CAA+BW,GDA3B,CAA+BtB,CECpB,CAAwB,CHDd,CAACnB,ECAtB,CCAJ,CAA2C,CFAlB,CCAoB,CDAT,ACAU,CAA9C,EAAiD,CEClC,CAAnB,iBDDI,EAAsE,OAAtE;AHIAF,AIFJ,AHDE,ACAIa,ACAH,EHGCb,EIFEM,EFDAO,IFGM,EAAE,AIFA,GAAGC,AFDF,CAACE,CAAD,CAAT,CAAaX,IECM,CAACU,AFDpB,CAAmBG,OAAnB,GAA6B,EAA7B,CECW,CAAwB,WAAxB,CAAjB;AJFE,AIGF,AHDEhB,ACAG,ACAJ,CHTgB,AGAV,CFSLA,CDIA,CIHI8C,CFHF,EDEG,CAAC7C,GCAG,CECG,GAAGW,AHDf,CAAc,OGCS,CAACC,EHDVX,IAAI,EAAI,MGCP,CAAwB,WAAxB,CAAjB;AJIIP,AIHJ,AHDIO,ACAES,EFIFhB,EAAE,AIHA0C,AHDFnC,EDII,AEJFS,CFGJ,CCHM,CAACR,KAAL,CAAWC,ACAA,CAACU,CAAD,CAAT,CAAaX,GECK,CHDpB,CCAE,CECqB,AFDFa,CDAC,MAAtB,ACAE,GAA6B,MAA7B,mCECN;AJIIpB,AIHJ,AHDG,ACAE,EFIDA,CCNF,CGGImD,EJGE,EAAE,KIHK,GAAGnC,GJChB,KIDwB,CAACC,cAAT,CAAwB,UAAxB,CAAlB;AJIIhB,AIHJ,AHDC,ACAE,CDLI,CDSHA,EIHEmD,MJGM,CIHC,CJGC,EIHEpC,QAAQ,CAACC,CJAvB,aIAc,CAAwB,UAAxB,CAAhB;AJIIf,AIFJ,AFFC,CAbM,CFiBHA,EIFAmD,MJEQ,EAAE,AIFF,GAAGrC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAf,EAEA;AJJE,CAbe,EAmBf;AACElB,AIFJ,EJEIA,EAAE,AIFAuD,EJEE,CADN,IIDW,GAAG,SAAVA,OAAU,GAAM;AJGlBtD,AIFFuD,AHLK,EDOHvD,ECPSS,EDOL,EAAE,WAFR,ACL0B,CGKjB+C,EHLoB,CGK7B,CAAa,OHLF/C,GGKEgD,IAAI,QHLY,CAACrD,KAAD,EAAQM,MAAR,EAAgBC,MAAhB,EAA2B;ADQtDV,AIHe,AHJjB,ACAK,EFOHA,EEPSkC,MFOD,CIFRkB,CJEU,OIFF,CAACK,AFLgB,GFI3B,AEJ8B,MEK5B,GFLSvB,gBAAmB,CAACC,KAAD,EAAW,0EEQzBqB,IAAI,CAACzD,IAHnB,sKAMkCyD,IAAI,CAACvD,QANvC,2HAS+BuD,IAAI,CAACzD,IATpC,gBAS8CyD,IAAI,CAACxD,QATnD,4CAWUwC,kBAXV,6CADe;AJIfvC,AIJe,AHHjBE,ACCA,EFMEF,ACPFE,CGGA,GFFIiC,CDDC,CAAChC,EDOI,EAAE,GCPZ,ACCa,CDDC,ECCE+B,KAAK,CAACE,EDDRhC,IAAI,ACCF,CAAaO,CDDP,ICCN,CAAmBW,IAAnB,EAAhB;AFEA,AIiBD,AHnBGlB,ACCF,CFlBe,AIkBjB,EJOE,CCREA,ECCIiC,EDDA,CAAC3B,MCCQ,GAAGe,EDDhB,GAAmBjB,ACCE,CAACkB,KDDtB,ICCgB,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2Bd,QAAQ,CAACe,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AFQEhC,ACRD,ACEDqC,EFMErC,AENFqC,CDJA,CDUI,EAAE,CADN,AELK,CAACI,cAAN;AFOExC,AIUJsD,AHlBE3C,EDQEX,ACRFW,IDQM,CIUD,CJVG,ACRF,CAACE,KAAP,GAAe,EAAf,gBDMA;AAGEZ,AIWJ,AHnBC,ACEC,CDRK,CDcHA,IENEoC,IFMM,EAAE,GENC,KAAK,CFGlB,CEHA,EAAsB;AFOpBnC,AENAqC,EFMArC,EENAqC,MFMQ,EAAE,CEND,CAAClC,OAAV,CAAkB,UAACC,IAAD,EAAU;AFE9B,AIeF,AFhBMA,CFxBW,EA+Bf,CISIiC,EFhBAjC,IAAI,CAACM,EEgBI,GAAGe,KAAK,CAACC,AFhBlB,GAAmBS,MEgBP,CAAgBR,EFhB5B,GEgBY,CAAsBC,IAAtB,CAA2Bd,QAAQ,CAACe,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AJRIhC,AISJ,AFhBK,EFODA,EAAE,AISAgB,CFlBF,CFSI,CADN,MIUa,GAAGY,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2Bd,QAAQ,CAACe,gBAAT,CAA0B,OAA1B,CAA3B,CAAlB,EAEA;AJVI/B,ACXG,ACIJ,EFOCA,CEXF,CDAWc,EDWL,EAAE,CEPD,QDJiB,GAAG,EDS3B,OCTWA,aAAgB,CAACC,SAAD,EAAe;ADYxCd,AIUJqB,AHrBE,ACIEiB,EFOAtC,EEPAsC,MFOQ,AIUF,CAACoB,CJVG,CEPD,CAACtD,OAAV,CAAkB,EFIpB,GIaF,CAA4B,IFjBLC,GEiBvB,CFjBsB,CEiBe,CFjBL;AFQ5BJ,AISiC,AHpBnCc,ACIIV,EFOFJ,ACXFc,ICIIV,GEgBqC,CJT/B,ACXF,ACIA,CDJCW,ACIAL,CFOG,UEPR,GDJJ,ACIuB6B,CDJC,aAAxB,CGoBwDnB,CHpBjBT,ECInC,GDJJ,GAA+C,CGoBN,CHpBzC,CGoBoEE,SAA3B,CAAN;AJbnC,AIamC,AFfhC,CF7BY,AI4CjB,EJPE,CISF,CFnBI;AFWAhB,ACbF,ACKC,EFQCA,EAAE,EAAE,CADN,ACZK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;ADczClB,AIQJgD,AHrBIjC,ACKH,CAhBM,CFwBHf,ECbAe,EDaI,EAAE,EIQA,CAAC4C,EHrBE,CDWX,ACXYzC,CAAD,CAAT,CAAaX,KAAb,CAAmBa,IGqBvB,CAA4B,EHrBxB,GAA6B,EGqBjC,AHrBI,EGqBiC,UAACgB,KAAD;AJPjCnC,AIOiC,AHpBlC,EDaCA,OIO4C,CJPpC,EAAE,YAHZ,kBIU+DmC,KAAjB,CAAX;AJNjClC,AIMiC,AHlBpC,CGkBD,AHzBO,CDmBHA,EIQJ,MJRY,EAAE;AAJZ,CArCe,EA2Cf;AACEH,AIMJS,EJNIT,EAAE,EAAE,CADN,CIOM,CAAC4D,gBAAT,CAA0B,OAA1B,EAAmC,UAACvB,KAAD,EAAW;AJL1CpC,AIMF,EJNEA,IAAI,AIMAuC,EJNE,OIMO,GAAGZ,KAAK,CAACC,CJRxB,QIQkB,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2Bd,QAAQ,CAACe,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AJLE9B,AIMF,EJNEA,IIME2D,IJNM,EAAE,SIMO,GJTnB,AISsBxB,KAAK,CAACE,MAAN,CAAazB,KAAnC;AJLEX,AIOFqC,EJPErC,AIOFqC,QJPU,CIOD,CJPG,AIOFlC,OAAV,CAAkB,UAAAC,IAAI,EAAI;AJX1B,AIYEA,CJvDa,EAiDf,CIMEA,IAAI,CAACC,KAAL,CAAWC,QAAX,GAAsBoD,eAAtB;AJLA7D,AIMD,EJNCA,CIIF,CJJI,EAAE,CADN;AAEEC,AIMH,CAPD,CJCIA,EIQJ,EJRQ,EAAE,QAFR;AAGEC,EAAAA,QAAQ,EAAE,YAHZ;AAIEC,AIOJ+C,EJPI/C,QAAQ,CIOD,CJPG,AIOFyD,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AJX1C,AIYAE,CJ7De,CI6DfA,CJNA,IIMK,CAAC,cAAD,CAAL;AJLE9D,AIMA,EJNAA,EAAE,EAAE,EADN,uBIOgB,OAAd;AJLAC,AIMH,CAHD,CJHIA,EIQJ,EJRQ,EAAE,SAFR;AAGEC,EAAAA,QAAQ,EAAE,YAHZ;AAIEC,AIOJgD,EJPIhD,MIOI,CAACyD,CJPG,EAAE,aIOd,CAA0B,OAA1B,EAAmC,UAACvB,KAAD,EAAW;AJX5C,AIYAiB,CJnEe,CImEfA,CJNA,OIMQ,CAACP,SAAT,CAAmBgB,MAAnB,CAA0B,YAA1B;AJLE/D,AIMH,CAFD,CJJIA,EAAE,AIQN,EJRQ,EADN;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,AIOJkD,EJPIlD,OIOK,CJPG,AIOF0D,EJPI,YAHZ,EIUF,CAA2B,OAA3B,EAAoC,YAAM;AJNtCzD,AIQF,EJREA,QAAQ,EAAE,gBIQEqC,SAAd;AJZA,AIaA,CJ1Ee,EAmEf,2BIOgBA,SAAhB,EAA2BE,kBAA3B,EAA+CO,UAA/C;AJNEjD,AIOF,EJPEA,EAAE,EAAE,EADN,oBIQcgB,SAAd;AJNEf,AIOH,CALD,CJFIA,IAAI,EAAE,cAFR;AAGEC,EAAAA,QAAQ,EAAE,YAHZ;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAnEe,CAAjB;eA2EeJ","file":"app.c3f9f951.js","sourceRoot":"../src","sourcesContent":["const fontData = [\n  {\n    id: 1,\n    name: 'Roboto',\n    fallback: 'san-serif',\n    designer: 'Christian Robertson'\n  },\n  {\n    id: 2,\n    name: 'Goldman',\n    fallback: 'cursive',\n    designer: 'Lam Bao, Duy Dao, Yellow Type Foundry'\n  },\n  {\n    id: 3,\n    name: 'Xanh Mono',\n    fallback: 'mono-space',\n    designer: 'Lam Bao, Duy Dao, Yellow Type Foundry'\n  },\n  {\n    id: 4,\n    name: 'Open Sans',\n    fallback: 'san-serif',\n    designer: 'Steve Matteson'\n  },\n  {\n    id: 5,\n    name: 'Big Shoulder Stencil Text',\n    fallback: 'cursive',\n    designer: 'Patric King'\n  },\n  {\n    id: 6,\n    name: 'Noto Sans JP',\n    fallback: 'sans-serif',\n    designer: 'Google'\n  },\n  {\n    id: 7,\n    name: 'Lato',\n    fallback: 'sans-serif',\n    designer: 'Łukasz Dziedzic'\n  },\n  {\n    id: 8,\n    name: 'Source Sans Pro',\n    fallback: 'sans-serif',\n    designer: 'Paul D. Hunt'\n  },\n  {\n    id: 9,\n    name: 'Oswald',\n    fallback: 'sans-serif',\n    designer: 'Vernon Adams, Kalapi Gajjar, Cyreal'\n  },\n  {\n    id: 10,\n    name: 'Poppins',\n    fallback: 'sans-serif',\n    designer: 'Indian Type Foundry, Jonny Pinhorn'\n  },\n  {\n    id: 11,\n    name: 'Raleway',\n    fallback: 'sans-serif',\n    designer: 'Multiple Designers'\n  },\n  {\n    id: 12,\n    name: 'Merriweather',\n    fallback: 'sans-serif',\n    designer: 'Sorkin Type'\n  }\n];\n\nexport default fontData;\n","/*\n * Reset function to reset UI to default state\n *\n * resetFontSize - set font card grid to default 20px font size\n * resetCustomText - reset sample text to default\n * resetCardGrid - reset to font search and card grid to default\n */\nexport const resetFontSize = (field) => {\n  // Reset font size\n  field.forEach(text => {\n    text.style.fontSize = '20px';\n  });\n};\n\nexport const resetCustomText = (field, sample, change) => {\n  // Reset custom text\n  field.forEach(text => {\n    text.textContent = sample;\n  });\n  change.value = '';\n};\n\nexport const resetCardGrid = (fontCards) => {\n  // Reset font name search grid\n  document.getElementById('font-search').value = '';\n  for (let i = 0; i < fontCards.length; i++) {\n    fontCards[i].style.display = '';\n  }\n\n};\n\n","export const fontCardSearch = (fontSearch, fontCards) => {\n\n  let filter = fontSearch.value.trim().toLowerCase();\n  const textTitle = Array.prototype.slice.call(document.querySelectorAll('h2'));\n\n  for (let i = 0; i < fontCards.length; i++) {\n    let txtValue = textTitle[i].textContent || textTitle[i].innerText;\n    if (txtValue.toLowerCase().indexOf(filter) > -1) {\n      fontCards[i].style.display = '';\n    } else {\n      fontCards[i].style.display = 'none';\n    }\n  }\n};\n\nexport const changeSampleText = (event) => {\n\n  let formValue = event.target.value.trim();\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n\n  event.preventDefault();\n\n  if (formValue !== '') {\n    textField.forEach((text) => {\n      text.textContent = formValue;\n    });\n  } else {\n    textField.forEach((text) => {\n      text.textContent = originalSampleText;\n    });\n  }\n};\n","export const colorSettings = (setColor) => {\n  if (setColor === 'white') {\n    document.documentElement.style.setProperty('--mode-color-background', 'black')\n    document.documentElement.style.setProperty('--mode-color-foreground', 'white')\n    document.getElementById('dark-mode-toggle').classList.remove('fa-fa-adjust')\n  } else {\n    document.documentElement.style.setProperty('--mode-color-background', 'white')\n    document.documentElement.style.setProperty('--mode-color-foreground', 'black')\n  }\n}\n","import FONTDATA from '../data/fontData';\nimport { resetFontSize, resetCustomText, resetCardGrid } from './reset';\nimport { changeSampleText, fontCardSearch } from './searchBar';\nimport { colorSettings } from './settings';\n\n\nconst changeText = document.getElementById('input-text');\nconst changeColor = document.getElementById('dark-mode-toggle');\nconst fontSearch = document.getElementById('font-search');\nconst fontSize = document.getElementById('font-size');\nconst gridList = document.getElementById('grid-list');\nconst originalSampleText = 'Almost before we knew it, we had left the ground.';\nconst resetIcon = document.getElementById('reset-ui');\nconst addFont = document.getElementById('add-font')\n\nlet fontCard = document.getElementById('card-array');\n\n// Load font card - UI\nconst getFont = () => {\n  FONTDATA.map(font => (\n    fontCard.innerHTML += `\n        <div class=\"card\">\n          <div class=\"card__title\">\n            <h2>${font.name}</h2>\n            <span><i class=\"far fa-plus-square card__icon\" id=\"add-font\"></i></span>\n          </div>\n          <p class=\"card__subtitle\">${font.designer}</p>\n          <p id=\"body-text\"\n            class=\"card__bodytext\" \n            style=\"font-family: '${font.name}', ${font.fallback}\"\n            >\n            ${originalSampleText}\n          </p>\n        </div>\n      `\n  ));\n};\ngetFont();\n\n/* Event listeners --------------- */\nconst textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\nconst fontCards = Array.prototype.slice.call(document.querySelectorAll('.card'));\n\n// Search for and filter font cards\nfontSearch.addEventListener('input', () => fontCardSearch(fontSearch, fontCards))\n\n// Change font card sample text\nchangeText.addEventListener('input', (event) => changeSampleText(event))\n\n// Change font size -- defaults to 20px\nfontSize.addEventListener('input', (event) => {\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n  let currentFontSize = event.target.value;\n\n  textField.forEach(text => {\n    text.style.fontSize = currentFontSize;\n  });\n});\n\n// Change color\nchangeColor.addEventListener('click', () => {\n  alert('Change color')\n    colorSettings(\"white\")\n})\n\n// Change grid to list display\ngridList.addEventListener('click', (event) => {\n  fontCard.classList.toggle('card__list')\n})\n\n// Reset UI\nresetIcon.addEventListener('click', () => {\n\n  resetFontSize(textField)\n  resetCustomText(textField, originalSampleText, changeText)\n  resetCardGrid(fontCards)\n});\n"]}