{"version":3,"sources":["data/fontData.js","js/reset.js","js/searchBar.js","js/settings.js","js/app.js"],"names":["fontData","id","name","fallback","designer","resetFontSize","field","forEach","text","style","fontSize","resetCustomText","sample","change","textContent","value","resetCardGrid","fontCards","document","getElementById","i","length","display","fontCardSearch","fontSearch","filter","trim","toLowerCase","textTitle","Array","prototype","slice","call","querySelectorAll","txtValue","innerText","indexOf","changeSampleText","event","formValue","target","textField","preventDefault","originalSampleText","colorSettings","setColor","documentElement","setProperty","classList","remove","changeText","changeColor","gridList","resetIcon","fontCard","getFont","FONTDATA","map","font","innerHTML","addEventListener","currentFontSize","alert","toggle"],"mappings":";;AIAA;;AACA;;AJDA,AIEA,IJFMA,QAAQ,GAAG,CACf;AACEC,ACFJ,ACAO,ACAA,EHEHA,EAAE,AEFOsB,ACAAqB,EHEL,CADN,UGDwB,CDAC,ECAE,CDAC,QCAjBA,CDAArB,YCAgB,CAACsB,CDAA,CAACrB,MCAF,EAAc,EDAb,EAAaP,SAAb,EAA2B;AFGrDf,AIAJ,AHFA,ACCE,ACDA,EHEEA,IAAI,AEDFuB,ACDAoB,EHEI,IEDE,ECDE,CDCCrB,CFDb,GGAiB,MDCM,CAACT,ACDxB,EAA0B,GDCb,CAAiBW,IAAjB,GAAwBC,WAAxB,EAAb;AFEExB,ACFJ,ACCE,ACDEe,EHEAf,EGFAe,EDCIU,IFCI,EAAE,AGFF,CAACkB,EDCI,GAAGjB,KFFlB,AEEuB,CAACC,ICDtB,CAAyBrB,IDCT,CAAgBsB,ACDhC,CAA+BgB,IDCf,CAAsBf,IAAtB,CAA2Bd,CCD3C,CAA2C,MDCQ,CAACe,gBAAT,CAA0B,CCDrE,EAAsE,CDC3B,CAA3B,CAAlB,ICDE;AHGA7B,ACFJ,AEAIc,EHEAd,EGFAc,MHEQ,EAAE,AGFF,CAAC4B,eAAT,CAAyBrC,KAAzB,CAA+BsC,WAA/B,CAA2C,yBAA3C,EAAsE,OAAtE;AHFF,ACGF,ACCE,ACDE7B,CHJa,EAOf,CGHEA,GDCG,IAAIE,CAAC,ACDA,CAACD,EDCE,CAAb,EAAgBC,CAAC,GAAGH,KCDlB,CAAwB,GDCG,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C,CCDzC,EAA4C4B,SAA5C,CAAsDC,MAAtD,CAA6D,cAA7D;AHIAhD,AIFJ,AHDA,ACCI,ACDD,EHGCA,CGPF,CHOI,AIFAiD,EJEE,CADN,CEDMhB,CCDC,KCCO,EFAA,CEAGhB,EFAAU,MEAQ,CAACT,EFAA,CAACC,CAAD,CAAT,CAAaN,QEAb,CAAwB,EFAxB,IAA4Bc,MEA5B,CAAnB,EFAwD,CAACR,CAAD,CAAT,CAAae,SAAxD;AFGAjC,AIFJ,AHDA,AEAIgB,EHGAhB,EIFEiD,ADDFjC,EHGI,EAAE,IGHE,CAAC4B,ECCI,EJAf,CIAkB5B,QAAQ,CAACC,CDDzB,CAAyBV,KAAzB,CAA+BsC,MCCf,CAAwB,IDDxC,CAA2C,aCC3B,CAApB,WDDI,EAAsE,OAAtE;AHIA5C,AIFJ,AHDO,ACAH,ACAAe,EHGAf,EIFEqB,AHDOnB,AEATa,IDAIgB,EFGI,EAAE,AGHF,CAACY,CCCG,EFDA,CECG5B,AHDO,ACATS,GDAY,CDA3B,IICyB,CAACR,EFDpB,ACAJ,CFASd,AEAgBI,EDAE2B,GCA3B,CAA+BW,GDA3B,CAA+BtB,CECpB,CAAwB,CHDd,CAACnB,ECAtB,CCAJ,CAA2C,CFAlB,CCAoB,CDAT,ACAU,CAA9C,EAAiD,CEClC,CAAnB,iBDDI,EAAsE,OAAtE;AHIAF,AIFJ,AHDE,ACAIa,ACAH,EHGCb,EIFEM,EFDAO,IFGM,EAAE,AIFA,GAAGC,AFDF,CAACE,CAAD,CAAT,CAAaX,IECM,CAACU,AFDpB,CAAmBG,OAAnB,GAA6B,EAA7B,CECW,CAAwB,WAAxB,CAAjB;AJFE,AIGF,AHDEhB,ACAG,ACAJ,CHTgB,AGAV,CFSLA,CDIA,CIHI8C,CFHF,EDEG,CAAC7C,GCAG,CECG,GAAGW,AHDf,CAAc,OGCS,CAACC,EHDVX,IAAI,EAAI,MGCP,CAAwB,WAAxB,CAAjB;AJIIP,AIHJ,AHDIO,ACAES,EFIFhB,EAAE,AIHA0C,AHDFnC,EDII,AEJFS,CFGJ,CCHM,CAACR,KAAL,CAAWC,ACAA,CAACU,CAAD,CAAT,CAAaX,GECK,CHDpB,CCAE,CECqB,AFDFa,CDAC,MAAtB,ACAE,GAA6B,MAA7B,mCECN;AJIIpB,AIHJ,AHDG,ACAE,EFIDA,CCNF,CGGImD,EJGE,EAAE,KIHK,GAAGnC,GJChB,KIDwB,CAACC,cAAT,CAAwB,UAAxB,CAAlB;AJIIhB,AIFJ,AHFC,ACAE,CDLI,CDSHA,EIFAmD,MJEQ,EAAE,AIFF,GAAGpC,QAAQ,CJDrB,AICsBC,cAAT,CAAwB,YAAxB,CAAf,EAEA;AJCIf,AEJH,CAbM,CFiBHA,QAAQ,EAAE;AAJZ,AIIF,CJjBiB,EAmBf,CIFImD,OAAO,GAAG,SAAVA,OAAU,GAAM;AJGlBtD,AIFFuD,EJEEvD,EAAE,EAAE,CADN,aIDSwD,GAAT,CAAa,UAAAC,IAAI;AJGfxD,AIHe,AHJZ,EDOHA,ECPSS,EDOL,EAAE,GIFN2C,QJAF,AIAU,AHLgB,CGKfK,EHLkB,OGK3B,EHLShD,eAAkB,CAACL,KAAD,EAAQM,MAAR,EAAgBC,MAAhB,EAA2B,4DGQxC6C,IAAI,CAACxD,IAHnB,sJAMkCwD,IAAI,CAACtD,QANvC,2HAS+BsD,IAAI,CAACxD,IATpC,gBAS8CwD,IAAI,CAACvD,QATnD,4CAWUwC,kBAXV,6CADe;AJIfxC,AIJe,AHHjB,ACAK,EFOHA,CIJF,CFHWkC,MFOD,EAAE,QEPe,GFI3B,AEJ8B,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AFQvClC,AIYH,AHnBCE,ACCA,CEAF,CJMIF,ACPFE,ICCIiC,CDDC,CAAChC,EDOI,EAAE,GCPZ,ACCa,CDDC,ECCE+B,KAAK,CAACE,EDDRhC,IAAI,ACCF,CAAaO,CDDP,ICCN,CAAmBW,IAAnB,EAAhB;AFEA,ACFElB,ACCF,CFlBe,EAyBf,CCREA,ECCIiC,EDDA,CAAC3B,MCCQ,GAAGe,EDDhB,GAAmBjB,ACCE,CAACkB,KDDtB,ICCgB,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2Bd,QAAQ,CAACe,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AFQEhC,AIUJsD,AHlBG,ACEDjB,EFMErC,AENFqC,CDJA,CDUI,EAAE,CADN,AIWK,AFhBA,CAACI,cAAN;AFOExC,AIWJ,AHnBEW,EDQEX,ACRFW,IDQM,EAAE,ACRF,CAACE,KAAP,GAAe,EAAf,gBDMA;AAGEZ,ACRH,ACEC,CDRK,CDcHA,IENEoC,IFMM,EAAE,GENC,KAAK,CFGlB,CEHA,EAAsB;AFOpBnC,AIUJ,AFhBIqC,EFMArC,EIUEqC,AFhBFA,MFMQ,EAAE,CIUC,AFhBF,CAAClC,EEgBIsB,KAAK,AFhBnB,CEgBoBC,AFhBF,SEgBJ,CAAgBC,AFhBXvB,IAAD,CEgBJ,CAAsBwB,AFhBR,IEgBd,CAA2Bd,QAAQ,CAACe,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AJdE,AIeF,AFhBMzB,CFxBW,EA+Bf,CISIS,EFhBAT,IAAI,CAACM,EEgBI,GAAGe,KAAK,CAACC,AFhBlB,GAAmBS,MEgBP,CAAgBR,EFhB5B,GEgBY,CAAsBC,IAAtB,CAA2Bd,QAAQ,CAACe,gBAAT,CAA0B,OAA1B,CAA3B,CAAlB,EAEA;AJVIhC,AEPC,EFODA,EAAE,CETF,CFSI,CADN;AAEEC,AIUJsB,AHrBO,ACIJ,EFOCtB,CEXF,CDAWc,EDWL,EAAE,CEPD,CEiBC,CAAC4C,MHrBe,GAAG,EDS3B,KIYF,CAA4B,CHrBf5C,MGqBb,EAAqC,KHrBR,CAACC,SAAD,EAAe;ADYxCd,AISiC,AHpBnC,ACIEsC,EFOAtC,EEPAsC,KEgBuC,CJT/B,EAAE,CEPD,CAAClC,OAAV,CAAkB,EFIpB,QEJqBC,IAAD,EAAU,EEgB0BgB,UAAf,EAA2BP,SAA3B,CAAN;AJRjCb,AIQiC,AHnBnCc,ACIIV,CEeN,CJRIJ,ACXFc,EGqBF,EFjBMV,IFOM,ACXF,ACIA,CDJCW,ACIAL,CFOG,UEPR,GDJJ,ACIuB6B,CDJC,aAAxB,EAAuC5B,ECInC,GDJJ,GAA+C,EAA/C;ADOA,AEFG,CF7BY,EAqCf,EEVE;AFWAd,AIQJiD,AHrBE,ACKC,EFQCjD,EAAE,EAAE,CADN,ACZK,GGqBG,CAAC2D,AHrBAxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KGqBtB,CAA4B,GHrBG,CAACI,GGqBhC,EAAqC,CHrBnC,EAAsCD,CAAC,EAAvC,EAA2C,EGqBPkB,KAAD;AJPjCpC,AIOiC,AHpBjCe,ACKH,CAhBM,CFwBHf,ECbAe,EDaI,EAAE,CIOsC,IHpBnC,CDWX,ACXYG,CAAD,CAAT,CAAaX,KAAb,CAAmBa,OAAnB,GAA6B,EAA7B,OGoB6DgB,KAAjB,CAAX;AJNjCnC,AIMiC,AHnBlC,CGmBH,CJNIA,EIQJ,MJRY,EAAE,YAHZ;AAIEC,ACZH,CAPM,CDmBHA,QAAQ,EAAE;AAJZ,AIYFM,CJjDiB,EA2Cf,KIMM,CAACkD,gBAAT,CAA0B,OAA1B,EAAmC,UAACtB,KAAD,EAAW;AJL1CrC,AIMF,EJNEA,EAAE,EAAE,AIMAwC,CJPN,QIOe,GAAGZ,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2Bd,QAAQ,CAACe,gBAAT,CAA0B,YAA1B,CAA3B,CAAlB;AJLE/B,AIMF,EJNEA,IAAI,AIMF2D,EJNI,aIMW,GAAGvB,CJRtB,IIQ2B,CAACE,MAAN,CAAazB,KAAnC;AJLEZ,AIOFsC,EJPEtC,AIOFsC,QJPU,CIOD,CJPG,AIOFlC,OAAV,CAAkB,IJVlB,MIUkBC,IAAI,EAAI;AJNxBJ,AIOAI,EJPAJ,EIOAI,IAAI,CAACC,CJPG,EAAE,EIOV,CAAWC,QAAX,GAAsBmD,eAAtB;AJXF,AIYC,CJvDc,EAiDf,AIIA;AJHE5D,AIMH,CAPD,CJCIA,EAAE,AIQN,EJRQ,CADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,AIOJgD,EJPIhD,QAAQ,CIOD,CJPG,AIOFyD,YJVV,IIUF,CAA6B,OAA7B,EAAsC,YAAM;AJNxCxD,AIOF0D,EJPE1D,AIOF0D,KAAK,CAAC,EJPI,EAAE,UIOP,CAAL,CAD0C,CAExC;AJZF,AIaD,CJ9DgB,AI2DjB,EJJE,CISF;AJRI7D,EAAAA,EAAE,EAAE,EADN;AAEEC,AIQJkD,EJRIlD,IAAI,EAAE,AIQF,CAAC0D,QJVP,QIUF,CAA0B,OAA1B,EAAmC,UAACtB,KAAD,EAAW;AJP1CnC,AIQFmD,EJREnD,AIQFmD,QJRU,AIQF,CAACN,CJRG,QIQZ,CAAmBe,GJXnB,GIWA,CAA0B,YAA1B;AJPE3D,AIQH,CAFD,CJNIA,EIUJ,MJVY,EAAE;AAJZ,CAvDe,EA6Df;AACEH,AIQJoD,EJRIpD,EAAE,EAAE,EADN,CISO,CAAC2D,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;AJPtC1D,AISF,EJTEA,IAAI,EAAE,SAFR,WIWcuC,SAAd;AJREtC,AISF,EJTEA,QAAQ,EAAE,YAHZ,MIYgBsC,SAAhB,EAA2BE,kBAA3B,EAA+CO,UAA/C;AJRE9C,AISF,EJTEA,QAAQ,EAAE,gBISEa,SAAd;AJbA,AIcD,CJ3EgB,AIsEjB,EJHE;AACEhB,EAAAA,EAAE,EAAE,EADN;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,QAAQ,EAAE,YAHZ;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAnEe,CAAjB;eA2EeJ","file":"app.c3f9f951.js","sourceRoot":"../src","sourcesContent":["const fontData = [\n  {\n    id: 1,\n    name: 'Roboto',\n    fallback: 'san-serif',\n    designer: 'Christian Robertson'\n  },\n  {\n    id: 2,\n    name: 'Goldman',\n    fallback: 'cursive',\n    designer: 'Lam Bao, Duy Dao, Yellow Type Foundry'\n  },\n  {\n    id: 3,\n    name: 'Xanh Mono',\n    fallback: 'mono-space',\n    designer: 'Lam Bao, Duy Dao, Yellow Type Foundry'\n  },\n  {\n    id: 4,\n    name: 'Open Sans',\n    fallback: 'san-serif',\n    designer: 'Steve Matteson'\n  },\n  {\n    id: 5,\n    name: 'Big Shoulder Stencil Text',\n    fallback: 'cursive',\n    designer: 'Patric King'\n  },\n  {\n    id: 6,\n    name: 'Noto Sans JP',\n    fallback: 'sans-serif',\n    designer: 'Google'\n  },\n  {\n    id: 7,\n    name: 'Lato',\n    fallback: 'sans-serif',\n    designer: 'Łukasz Dziedzic'\n  },\n  {\n    id: 8,\n    name: 'Source Sans Pro',\n    fallback: 'sans-serif',\n    designer: 'Paul D. Hunt'\n  },\n  {\n    id: 9,\n    name: 'Oswald',\n    fallback: 'sans-serif',\n    designer: 'Vernon Adams, Kalapi Gajjar, Cyreal'\n  },\n  {\n    id: 10,\n    name: 'Poppins',\n    fallback: 'sans-serif',\n    designer: 'Indian Type Foundry, Jonny Pinhorn'\n  },\n  {\n    id: 11,\n    name: 'Raleway',\n    fallback: 'sans-serif',\n    designer: 'Multiple Designers'\n  },\n  {\n    id: 12,\n    name: 'Merriweather',\n    fallback: 'sans-serif',\n    designer: 'Sorkin Type'\n  }\n];\n\nexport default fontData;\n","/*\n * Reset function to reset UI to default state\n *\n * resetFontSize - set font card grid to default 20px font size\n * resetCustomText - reset sample text to default\n * resetCardGrid - reset to font search and card grid to default\n */\nexport const resetFontSize = (field) => {\n  // Reset font size\n  field.forEach(text => {\n    text.style.fontSize = '20px';\n  });\n};\n\nexport const resetCustomText = (field, sample, change) => {\n  // Reset custom text\n  field.forEach(text => {\n    text.textContent = sample;\n  });\n  change.value = '';\n};\n\nexport const resetCardGrid = (fontCards) => {\n  // Reset font name search grid\n  document.getElementById('font-search').value = '';\n  for (let i = 0; i < fontCards.length; i++) {\n    fontCards[i].style.display = '';\n  }\n\n};\n\n","export const fontCardSearch = (fontSearch, fontCards) => {\n\n  let filter = fontSearch.value.trim().toLowerCase();\n  const textTitle = Array.prototype.slice.call(document.querySelectorAll('h2'));\n\n  for (let i = 0; i < fontCards.length; i++) {\n    let txtValue = textTitle[i].textContent || textTitle[i].innerText;\n    if (txtValue.toLowerCase().indexOf(filter) > -1) {\n      fontCards[i].style.display = '';\n    } else {\n      fontCards[i].style.display = 'none';\n    }\n  }\n};\n\nexport const changeSampleText = (event) => {\n\n  let formValue = event.target.value.trim();\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n\n  event.preventDefault();\n\n  if (formValue !== '') {\n    textField.forEach((text) => {\n      text.textContent = formValue;\n    });\n  } else {\n    textField.forEach((text) => {\n      text.textContent = originalSampleText;\n    });\n  }\n};\n","export const colorSettings = (setColor) => {\n  if (setColor === 'white') {\n    document.documentElement.style.setProperty('--mode-color-background', 'black')\n    document.documentElement.style.setProperty('--mode-color-foreground', 'white')\n    document.getElementById('dark-mode-toggle').classList.remove('fa-fa-adjust')\n  } else {\n    document.documentElement.style.setProperty('--mode-color-background', 'white')\n    document.documentElement.style.setProperty('--mode-color-foreground', 'black')\n  }\n}\n","import FONTDATA from '../data/fontData';\nimport { resetFontSize, resetCustomText, resetCardGrid } from './reset';\nimport { changeSampleText, fontCardSearch } from './searchBar';\nimport { colorSettings } from './settings';\n\n\nconst changeText = document.getElementById('input-text');\nconst changeColor = document.getElementById('dark-mode-toggle');\nconst fontSearch = document.getElementById('font-search');\nconst fontSize = document.getElementById('font-size');\nconst gridList = document.getElementById('grid-list');\nconst originalSampleText = 'Almost before we knew it, we had left the ground.';\nconst resetIcon = document.getElementById('reset-ui');\n\nlet fontCard = document.getElementById('card-array');\n\n// Load font card - UI\nconst getFont = () => {\n  FONTDATA.map(font => (\n    fontCard.innerHTML += `\n        <div class=\"card\">\n          <div class=\"card__title\">\n            <h2>${font.name}</h2>\n            <span><i class=\"far fa-plus-square card__icon\"></i></span>\n          </div>\n          <p class=\"card__subtitle\">${font.designer}</p>\n          <p id=\"body-text\"\n            class=\"card__bodytext\" \n            style=\"font-family: '${font.name}', ${font.fallback}\"\n            >\n            ${originalSampleText}\n          </p>\n        </div>\n      `\n  ));\n};\ngetFont();\n\n/* Event listeners --------------- */\nconst textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\nconst fontCards = Array.prototype.slice.call(document.querySelectorAll('.card'));\n\n// Search for and filter font cards\nfontSearch.addEventListener('input', () => fontCardSearch(fontSearch, fontCards))\n\n// Change font card sample text\nchangeText.addEventListener('input', (event) => changeSampleText(event))\n\n// Change font size -- defaults to 20px\nfontSize.addEventListener('input', (event) => {\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n  let currentFontSize = event.target.value;\n\n  textField.forEach(text => {\n    text.style.fontSize = currentFontSize;\n  });\n});\n\n// Change color\nchangeColor.addEventListener('click', () => {\n  alert('Change color')\n    // colorSettings(\"white\")\n})\n\n// Change grid to list display\ngridList.addEventListener('click', (event) => {\n  fontCard.classList.toggle('card__list')\n})\n\n// Reset UI\nresetIcon.addEventListener('click', () => {\n\n  resetFontSize(textField)\n  resetCustomText(textField, originalSampleText, changeText)\n  resetCardGrid(fontCards)\n});\n"]}