{"version":3,"sources":["data/fontData.js","js/app.js"],"names":["fontData","id","name","fallback","designer","changeText","document","getElementById","originalSampleText","fontSearch","fontSize","resetIcon","fontCard","getFont","FONTDATA","map","font","innerHTML","addEventListener","filter","value","trim","toLowerCase","fontCards","Array","prototype","slice","call","querySelectorAll","textTitle","i","length","txtValue","textContent","innerText","indexOf","style","display","event","formValue","target","textField","preventDefault","forEach","text","currentFontSize"],"mappings":"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","file":"app.c3f9f951.js","sourceRoot":"../src","sourcesContent":["const fontData = [\n  {\n    id: 1,\n    name: 'Roboto',\n    fallback: 'san-serif',\n    designer: 'Christian Robertson'\n  },\n  {\n    id: 2,\n    name: 'Goldman',\n    fallback: 'cursive',\n    designer: 'Lam Bao, Duy Dao, Yellow Type Foundry'\n  },\n  {\n    id: 3,\n    name: 'Xanh Mono',\n    fallback: 'mono-space',\n    designer: 'Lam Bao, Duy Dao, Yellow Type Foundry'\n  },\n  {\n    id: 4,\n    name: 'Open Sans',\n    fallback: 'san-serif',\n    designer: 'Steve Matteson'\n  },\n  {\n    id: 5,\n    name: 'Big Shoulder Stencil Text',\n    fallback: 'cursive',\n    designer: 'Patric King'\n  },\n  {\n    id: 6,\n    name: 'Noto Sans JP',\n    fallback: 'sans-serif',\n    designer: 'Google'\n  },\n  {\n    id: 7,\n    name: 'Lato',\n    fallback: 'sans-serif',\n    designer: 'Łukasz Dziedzic'\n  },\n  {\n    id: 8,\n    name: 'Source Sans Pro',\n    fallback: 'sans-serif',\n    designer: 'Paul D. Hunt'\n  },\n  {\n    id: 9,\n    name: 'Oswald',\n    fallback: 'sans-serif',\n    designer: 'Vernon Adams, Kalapi Gajjar, Cyreal'\n  },\n  {\n    id: 10,\n    name: 'Poppins',\n    fallback: 'sans-serif',\n    designer: 'Indian Type Foundry, Jonny Pinhorn'\n  },\n  {\n    id: 11,\n    name: 'Raleway',\n    fallback: 'sans-serif',\n    designer: 'Multiple Designers'\n  },\n  {\n    id: 12,\n    name: 'Merriweather',\n    fallback: 'sans-serif',\n    designer: 'Sorkin Type'\n  }\n];\n\nexport default fontData;\n","import FONTDATA from '../data/fontData';\n\nconst changeText = document.getElementById('input-text');\nconst originalSampleText = 'Almost before we knew it, we had left the ground.';\nconst fontSearch = document.getElementById('font-search');\nconst fontSize = document.getElementById('font-size');\nconst resetIcon = document.getElementById('reset-ui');\n\n// Variables\nlet fontCard = document.getElementById('card-array');\n\n// Load fonts\nconst getFont = () => {\n  FONTDATA.map(font => (\n    fontCard.innerHTML += `\n        <div class=\"card\">\n          <div class=\"card__title\">\n            <h2>${font.name}</h2>\n            <span><i class=\"far fa-plus-square card__icon\"></i></span>\n          </div>\n          <p class=\"card__subtitle\">${font.designer}</p>\n          <p id=\"body-text\"\n            class=\"card__bodytext\" \n            style=\"font-family: '${font.name}', ${font.fallback}\"\n            >\n            ${originalSampleText}\n          </p>\n        </div>\n      `\n  ));\n};\ngetFont();\n\n/* Event listeners --------------- */\n\n// Font search filter\nfontSearch.addEventListener('input', () => {\n  let filter = fontSearch.value.trim().toLowerCase()\n  const fontCards = Array.prototype.slice.call(document.querySelectorAll('.card'));\n  const textTitle = Array.prototype.slice.call(document.querySelectorAll('h2'));\n\n  for (let i = 0; i < fontCards.length; i++) {\n    // let a = textTitle[i]\n    let txtValue = textTitle[i].textContent || textTitle[i].innerText\n    if (txtValue.toLowerCase().indexOf(filter) > -1) {\n      fontCards[i].style.display = '';\n    } else {\n      fontCards[i].style.display = 'none'\n    }\n  }\n})\n\n\n// Change sample text\nchangeText.addEventListener('input', (event) => {\n  let formValue = event.target.value.trim();\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n\n  event.preventDefault();\n\n  if (formValue !== '') {\n    textField.forEach((text) => {\n      text.textContent = formValue;\n    });\n  } else {\n    textField.forEach((text) => {\n      text.textContent = originalSampleText;\n    });\n  }\n\n});\n\n// Change font size -- defaults to 20px\nfontSize.addEventListener('input', (event) => {\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n  let currentFontSize = event.target.value;\n\n  textField.forEach(text => {\n    text.style.fontSize = currentFontSize;\n  });\n});\n\n// Reset UI\nresetIcon.addEventListener('click', () => {\n  // Reset font size\n  const textField = Array.prototype.slice.call(document.querySelectorAll('#body-text'));\n\n  textField.forEach(text => {\n    text.style.fontSize = '20px';\n  });\n\n  // Reset custom text\n  textField.forEach(text => {\n    text.textContent = originalSampleText;\n  });\n\n});\n\n\n"]}